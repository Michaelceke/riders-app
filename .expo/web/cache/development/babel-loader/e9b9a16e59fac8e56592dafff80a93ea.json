{
  "ast": null,
  "code": "var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useSelector = exports.store = exports.default = void 0;\n\nvar _redux = require(\"redux\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _reduxSaga = _interopRequireDefault(require(\"redux-saga\"));\n\nvar _appNotification = require(\"./appNotification\");\n\nvar _quote = require(\"./quote\");\n\nvar _saga = _interopRequireDefault(require(\"./saga\"));\n\nvar sagaMiddleware = (0, _reduxSaga.default)();\nvar rootReducer = (0, _redux.combineReducers)({\n  appNotification: _appNotification.appNotification,\n  quote: _quote.quote\n});\n\nvar configureStore = function configureStore() {\n  var store = (0, _redux.createStore)(rootReducer, (0, _redux.compose)((0, _redux.applyMiddleware)(sagaMiddleware)));\n  sagaMiddleware.run(_saga.default);\n  return store;\n};\n\nvar store = configureStore();\nexports.store = store;\nvar useSelector = _reactRedux.useSelector;\nexports.useSelector = useSelector;\nvar _default = rootReducer;\nexports.default = _default;",
  "map": {
    "version": 3,
    "sources": ["C:/Users/a/projects/riders-app/src/stores/index.ts"],
    "names": [
      "sagaMiddleware",
      "rootReducer",
      "appNotification",
      "quote",
      "configureStore",
      "store",
      "run",
      "saga",
      "useSelector",
      "useReduxSelector"
    ],
    "mappings": ";;;;;;;AAAA;;AACA;;AAIA;;AACA;;AACA;;AACA;;AAEA,IAAMA,cAAc,GAAG,yBAAvB;AAEA,IAAMC,WAAW,GAAG,4BAAgB;AAClCC,EAAAA,eAAe,EAAfA,gCADkC;AAElCC,EAAAA,KAAK,EAALA;AAFkC,CAAhB,CAApB;;AAKA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,MAAMC,KAAK,GAAG,wBACZJ,WADY,EAEZ,oBAAQ,4BAAgBD,cAAhB,CAAR,CAFY,CAAd;AAKAA,EAAAA,cAAc,CAACM,GAAf,CAAmBC,aAAnB;AACA,SAAOF,KAAP;AACD,CARD;;AAUO,IAAMA,KAAK,GAAGD,cAAc,EAA5B;;AAEA,IAAMI,WAA4C,GAAGC,uBAArD;;eACQR,W",
    "sourcesContent": [
      "import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\r\nimport {\r\n  useSelector as useReduxSelector,\r\n  TypedUseSelectorHook,\r\n} from 'react-redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { appNotification } from '@src/stores/appNotification';\r\nimport { quote } from '@src/stores/quote';\r\nimport saga from '@src/stores/saga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst rootReducer = combineReducers({\r\n  appNotification,\r\n  quote,\r\n});\r\n\r\nconst configureStore = () => {\r\n  const store = createStore(\r\n    rootReducer,\r\n    compose(applyMiddleware(sagaMiddleware)),\r\n  );\r\n\r\n  sagaMiddleware.run(saga);\r\n  return store;\r\n};\r\n\r\nexport const store = configureStore();\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\nexport const useSelector: TypedUseSelectorHook<RootState> = useReduxSelector;\r\nexport default rootReducer;\r\n"
    ]
  },
  "metadata": {},
  "sourceType": "script"
}
