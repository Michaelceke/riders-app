{
  "ast": null,
  "code": "var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _nativeBase = require(\"native-base\");\n\nvar _drawer = require(\"@react-navigation/drawer\");\n\nvar _OrdersBag = require(\"../../../assets/IconComponents/OrdersBag\");\n\nvar _Bicycle = require(\"../../../assets/IconComponents/Bicycle\");\n\nvar _Profile = require(\"../../../assets/IconComponents/Profile\");\n\nvar _Clock = require(\"../../../assets/IconComponents/Clock\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\a\\\\projects\\\\riders-app\\\\src\\\\_shared\\\\libs\\\\DrawerContent.tsx\";\n\nvar DrawerContent = function DrawerContent(props) {\n  return _react.default.createElement(_nativeBase.Box, {\n    flex: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_drawer.DrawerContentScrollView, (0, _extends2.default)({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_drawer.DrawerItem, {\n    label: function label(_ref) {\n      var color = _ref.color;\n      var focused = props.state.index === props.state.routes.findIndex(function (e) {\n        return e.name === \"Home\";\n      });\n      var textAndIconColor = focused ? \"#FF1B03\" : \"#8F92A1\";\n      return _react.default.createElement(_nativeBase.HStack, {\n        space: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }\n      }, _react.default.createElement(_nativeBase.HStack, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_nativeBase.Box, {\n        w: \"10px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }\n      }, focused && _react.default.createElement(_nativeBase.Divider, {\n        bg: \"#FF1B03\",\n        thickness: \"5px\",\n        height: \"30px\",\n        width: \"4px\",\n        borderRadius: \"3px\",\n        mr: \"6px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 23\n        }\n      })), _react.default.createElement(_OrdersBag.OrdersBag, {\n        fill: textAndIconColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 19\n        }\n      })), _react.default.createElement(_nativeBase.Text, {\n        alignSelf: \"center\",\n        color: textAndIconColor,\n        fontWeight: \"semibold\",\n        fontSize: \"18px\",\n        lineHeight: \"23px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, \"Orders\"));\n    },\n    onPress: function onPress() {\n      props.navigation.navigate(\"Home\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_drawer.DrawerItem, {\n    label: function label(_ref2) {\n      var color = _ref2.color;\n      var focused = props.state.index === props.state.routes.findIndex(function (e) {\n        return e.name === \"In Progress\";\n      });\n      var textAndIconColor = focused ? \"#FF1B03\" : \"#8F92A1\";\n      return _react.default.createElement(_nativeBase.HStack, {\n        space: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }\n      }, _react.default.createElement(_nativeBase.HStack, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_nativeBase.Box, {\n        w: \"10px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 19\n        }\n      }, focused && _react.default.createElement(_nativeBase.Divider, {\n        bg: \"#FF1B03\",\n        thickness: \"5px\",\n        height: \"30px\",\n        width: \"4px\",\n        borderRadius: \"3px\",\n        mr: \"6px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 23\n        }\n      })), _react.default.createElement(_Bicycle.Bicycle, {\n        fill: textAndIconColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 19\n        }\n      })), _react.default.createElement(_nativeBase.Text, {\n        alignSelf: \"center\",\n        color: textAndIconColor,\n        fontWeight: \"semibold\",\n        fontSize: \"18px\",\n        lineHeight: \"23px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }, \"In Progress\"));\n    },\n    onPress: function onPress() {\n      props.navigation.navigate(\"In Progress\");\n    },\n    labelStyle: {\n      color: \"#FF0000\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_drawer.DrawerItem, {\n    label: function label(_ref3) {\n      var color = _ref3.color;\n      var focused = props.state.index === props.state.routes.findIndex(function (e) {\n        return e.name === \"Order History\";\n      });\n      var textAndIconColor = focused ? \"#FF1B03\" : \"#8F92A1\";\n      return _react.default.createElement(_nativeBase.HStack, {\n        space: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }\n      }, _react.default.createElement(_nativeBase.HStack, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_nativeBase.Box, {\n        w: \"10px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 19\n        }\n      }, focused && _react.default.createElement(_nativeBase.Divider, {\n        bg: \"#FF1B03\",\n        thickness: \"5px\",\n        height: \"30px\",\n        width: \"4px\",\n        borderRadius: \"3px\",\n        mr: \"6px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 23\n        }\n      })), _react.default.createElement(_Clock.Clock, {\n        fill: textAndIconColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 19\n        }\n      })), _react.default.createElement(_nativeBase.Text, {\n        alignSelf: \"center\",\n        color: textAndIconColor,\n        fontWeight: \"semibold\",\n        fontSize: \"18px\",\n        lineHeight: \"23px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }\n      }, \"Order History\"));\n    },\n    onPress: function onPress() {\n      props.navigation.navigate(\"Order History\");\n    },\n    labelStyle: {\n      color: \"#FF0000\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_drawer.DrawerItem, {\n    label: function label(_ref4) {\n      var color = _ref4.color;\n      var focused = props.state.index === props.state.routes.findIndex(function (e) {\n        return e.name === \"Rider\";\n      });\n      var textAndIconColor = focused ? \"#FF1B03\" : \"#8F92A1\";\n      return _react.default.createElement(_nativeBase.HStack, {\n        space: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }\n      }, _react.default.createElement(_nativeBase.HStack, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_nativeBase.Box, {\n        w: \"10px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 19\n        }\n      }, focused && _react.default.createElement(_nativeBase.Divider, {\n        bg: \"#FF1B03\",\n        thickness: \"5px\",\n        height: \"30px\",\n        width: \"4px\",\n        borderRadius: \"3px\",\n        mr: \"6px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 23\n        }\n      })), _react.default.createElement(_Profile.Profile, {\n        fill: textAndIconColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 19\n        }\n      })), _react.default.createElement(_nativeBase.Text, {\n        alignSelf: \"center\",\n        color: textAndIconColor,\n        fontWeight: \"semibold\",\n        fontSize: \"18px\",\n        lineHeight: \"23px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }\n      }, \"Rider\"));\n    },\n    onPress: function onPress() {\n      props.navigation.navigate(\"Rider\");\n    },\n    labelStyle: {\n      color: \"#000000\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  })), _react.default.createElement(_nativeBase.HStack, {\n    mb: \"10px\",\n    ml: \"30px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_nativeBase.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, \"Sign Out\")));\n};\n\nvar _default = DrawerContent;\nexports.default = _default;",
  "map": {
    "version": 3,
    "sources": [
      "C:/Users/a/projects/riders-app/src/_shared/libs/DrawerContent.tsx"
    ],
    "names": [
      "DrawerContent",
      "props",
      "color",
      "focused",
      "state",
      "index",
      "routes",
      "findIndex",
      "e",
      "name",
      "textAndIconColor",
      "navigation",
      "navigate"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import React from \"react\";\nimport {\n  Text,\n  Flex,\n  Box,\n  VStack,\n  HStack,\n  Icon,\n  Badge,\n  Spacer,\n  Link,\n  Drawer,\n  Divider,\n} from \"native-base\";\nimport {\n  DrawerContentScrollView,\n  DrawerItem,\n  DrawerItemList,\n} from \"@react-navigation/drawer\";\nimport { SvgXml } from \"react-native-svg\";\nimport { OrdersBag } from \"@src/../assets/IconComponents/OrdersBag\";\nimport { Bicycle } from \"@src/../assets/IconComponents/Bicycle\";\nimport { Profile } from \"@src/../assets/IconComponents/Profile\";\nimport { Clock } from \"@src/../assets/IconComponents/Clock\";\nimport Sendme1 from \"@src/../assets/SVG/sendme1.svg\";\nimport { xml } from \"@src/../assets/IconComponents/sendme\";\n\nimport { NavigationContainer } from \"@react-navigation/native\";\n\nconst DrawerContent = (props) => {\n  return (\n    <Box flex={1}>\n      <DrawerContentScrollView {...props}>\n        <DrawerItem\n          label={({ color }) => {\n            const focused =\n              props.state.index ===\n              props.state.routes.findIndex((e) => e.name === \"Home\");\n            const textAndIconColor = focused ? \"#FF1B03\" : \"#8F92A1\";\n\n            return (\n              <HStack space={4}>\n                <HStack>\n                  <Box w=\"10px\">\n                    {focused && (\n                      <Divider\n                        bg={\"#FF1B03\"}\n                        thickness=\"5px\"\n                        height={\"30px\"}\n                        width={\"4px\"}\n                        borderRadius=\"3px\"\n                        mr=\"6px\"\n                      />\n                    )}\n                  </Box>\n                  <OrdersBag fill={textAndIconColor} />\n                </HStack>\n                <Text\n                  alignSelf=\"center\"\n                  color={textAndIconColor}\n                  fontWeight=\"semibold\"\n                  fontSize=\"18px\"\n                  lineHeight=\"23px\"\n                >\n                  Orders\n                </Text>\n              </HStack>\n            );\n          }}\n          onPress={() => {\n            props.navigation.navigate(\"Home\");\n          }}\n        />\n\n        <DrawerItem\n          label={({ color }) => {\n            const focused =\n              props.state.index ===\n              props.state.routes.findIndex((e) => e.name === \"In Progress\");\n            const textAndIconColor = focused ? \"#FF1B03\" : \"#8F92A1\";\n\n            return (\n              <HStack space={4}>\n                <HStack>\n                  <Box w=\"10px\">\n                    {focused && (\n                      <Divider\n                        bg={\"#FF1B03\"}\n                        thickness=\"5px\"\n                        height={\"30px\"}\n                        width={\"4px\"}\n                        borderRadius=\"3px\"\n                        mr=\"6px\"\n                      />\n                    )}\n                  </Box>\n                  <Bicycle fill={textAndIconColor} />\n                </HStack>\n                <Text\n                  alignSelf=\"center\"\n                  color={textAndIconColor}\n                  fontWeight=\"semibold\"\n                  fontSize=\"18px\"\n                  lineHeight=\"23px\"\n                >\n                  In Progress\n                </Text>\n              </HStack>\n            );\n          }}\n          onPress={() => {\n            props.navigation.navigate(\"In Progress\");\n          }}\n          labelStyle={{ color: \"#FF0000\" }}\n        />\n\n        <DrawerItem\n          label={({ color }) => {\n            const focused =\n              props.state.index ===\n              props.state.routes.findIndex((e) => e.name === \"Order History\");\n            const textAndIconColor = focused ? \"#FF1B03\" : \"#8F92A1\";\n\n            return (\n              <HStack space={4}>\n                <HStack>\n                  <Box w=\"10px\">\n                    {focused && (\n                      <Divider\n                        bg={\"#FF1B03\"}\n                        thickness=\"5px\"\n                        height={\"30px\"}\n                        width={\"4px\"}\n                        borderRadius=\"3px\"\n                        mr=\"6px\"\n                      />\n                    )}\n                  </Box>\n                  <Clock fill={textAndIconColor} />\n                </HStack>\n                <Text\n                  alignSelf=\"center\"\n                  color={textAndIconColor}\n                  fontWeight=\"semibold\"\n                  fontSize=\"18px\"\n                  lineHeight=\"23px\"\n                >\n                  Order History\n                </Text>\n              </HStack>\n            );\n          }}\n          onPress={() => {\n            props.navigation.navigate(\"Order History\");\n          }}\n          labelStyle={{ color: \"#FF0000\" }}\n        />\n\n        <DrawerItem\n          label={({ color }) => {\n            const focused =\n              props.state.index ===\n              props.state.routes.findIndex((e) => e.name === \"Rider\");\n\n            const textAndIconColor = focused ? \"#FF1B03\" : \"#8F92A1\";\n\n            return (\n              <HStack space={4}>\n                <HStack>\n                  <Box w=\"10px\">\n                    {focused && (\n                      <Divider\n                        bg={\"#FF1B03\"}\n                        thickness=\"5px\"\n                        height={\"30px\"}\n                        width={\"4px\"}\n                        borderRadius=\"3px\"\n                        mr=\"6px\"\n                      />\n                    )}\n                  </Box>\n                  <Profile fill={textAndIconColor} />\n                </HStack>\n                <Text\n                  alignSelf=\"center\"\n                  color={textAndIconColor}\n                  fontWeight=\"semibold\"\n                  fontSize=\"18px\"\n                  lineHeight=\"23px\"\n                >\n                  Rider\n                </Text>\n              </HStack>\n            );\n          }}\n          onPress={() => {\n            props.navigation.navigate(\"Rider\");\n          }}\n          labelStyle={{ color: \"#000000\" }}\n        />\n      </DrawerContentScrollView>\n      <HStack mb=\"10px\" ml=\"30px\">\n        <Text>Sign Out</Text>\n      </HStack>\n    </Box>\n  );\n};\n\nexport default DrawerContent;\n\n// <DrawerItem\n//           icon={({ focused }) => {\n//             let stateColor;\n//             stateColor = focused ? \"#FFFF00\" : \"#FFFFFF\";\n//             return (\n//               <HStack>\n//                 <Divider\n//                   bg={stateColor}\n//                   thickness=\"5px\"\n//                   height={\"30px\"}\n//                   width={\"4px\"}\n//                   borderRadius=\"3px\"\n//                   mr=\"8px\"\n//                 />\n//                 <OrdersBag fill={stateColor} />\n//               </HStack>\n//             );\n//           }}\n//           label=\"Home3\"\n//           onPress={() => {\n//             props.navigation.navigate(\"Home3\");\n//           }}\n//           labelStyle={{ color: \"blue\"}}\n//         />\n"
    ]
  },
  "metadata": {},
  "sourceType": "script"
}
