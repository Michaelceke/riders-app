{
  "ast": null,
  "code": "var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = App;\nexports.theme = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _nativeBase = require(\"native-base\");\n\nvar _NativeBaseIcon = _interopRequireDefault(require(\"../components/NativeBaseIcon\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\a\\\\projects\\\\riders-app\\\\src\\\\pages\\\\Home.tsx\";\nvar config = {\n  useSystemColorMode: false,\n  initialColorMode: 'dark'\n};\nvar theme = (0, _nativeBase.extendTheme)({\n  config: config\n});\nexports.theme = theme;\n\nfunction App() {\n  return _react.default.createElement(_nativeBase.NativeBaseProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_nativeBase.Center, {\n    _dark: {\n      bg: 'blueGray.900'\n    },\n    _light: {\n      bg: 'blueGray.50'\n    },\n    px: 4,\n    flex: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_nativeBase.VStack, {\n    space: 5,\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_NativeBaseIcon.default, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_nativeBase.Heading, {\n    size: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"Welcome to NativeBase\"), _react.default.createElement(_nativeBase.HStack, {\n    space: 2,\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_nativeBase.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Edit\"), _react.default.createElement(_nativeBase.Code, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"App.tsx\"), _react.default.createElement(_nativeBase.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"and save to reload.\")), _react.default.createElement(_nativeBase.Link, {\n    href: \"https://docs.nativebase.io\",\n    isExternal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_nativeBase.Text, {\n    color: \"primary.500\",\n    underline: true,\n    fontSize: \"xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Learn NativeBase\")), _react.default.createElement(ToggleDarkMode, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }))));\n}\n\nfunction ToggleDarkMode() {\n  var _useColorMode = (0, _nativeBase.useColorMode)(),\n      colorMode = _useColorMode.colorMode,\n      toggleColorMode = _useColorMode.toggleColorMode;\n\n  return _react.default.createElement(_nativeBase.HStack, {\n    space: 2,\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_nativeBase.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Dark\"), _react.default.createElement(_nativeBase.Switch, {\n    isChecked: colorMode === 'light',\n    onToggle: toggleColorMode,\n    \"aria-label\": colorMode === 'light' ? 'switch to dark mode' : 'switch to light mode',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_nativeBase.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Light\"));\n}",
  "map": {
    "version": 3,
    "sources": ["C:/Users/a/projects/riders-app/src/pages/Home.tsx"],
    "names": [
      "config",
      "useSystemColorMode",
      "initialColorMode",
      "theme",
      "App",
      "bg",
      "ToggleDarkMode",
      "colorMode",
      "toggleColorMode"
    ],
    "mappings": ";;;;;;;;AAAA;;AACA;;AAaA;;;AAGA,IAAMA,MAAM,GAAG;AACbC,EAAAA,kBAAkB,EAAE,KADP;AAEbC,EAAAA,gBAAgB,EAAE;AAFL,CAAf;AAMO,IAAMC,KAAK,GAAG,6BAAY;AAAEH,EAAAA,MAAM,EAANA;AAAF,CAAZ,CAAd;;;AAEQ,SAASI,GAAT,GAAe;AAC5B,SACE,6BAAC,8BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,kBAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,EAAE,EAAE;AAAN,KADT;AAEE,IAAA,MAAM,EAAE;AAAEA,MAAAA,EAAE,EAAE;AAAN,KAFV;AAGE,IAAA,EAAE,EAAE,CAHN;AAIE,IAAA,IAAI,EAAE,CAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,6BAAC,kBAAD;AAAQ,IAAA,KAAK,EAAE,CAAf;AAAkB,IAAA,UAAU,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,6BAAC,mBAAD;AAAS,IAAA,IAAI,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,EAGE,6BAAC,kBAAD;AAAQ,IAAA,KAAK,EAAE,CAAf;AAAkB,IAAA,UAAU,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,6BAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,EAGE,6BAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHF,CAHF,EAQE,6BAAC,gBAAD;AAAM,IAAA,IAAI,EAAC,4BAAX;AAAwC,IAAA,UAAU,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,gBAAD;AAAM,IAAA,KAAK,EAAC,aAAZ;AAA0B,IAAA,SAAS,MAAnC;AAAoC,IAAA,QAAQ,EAAC,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CARF,EAaE,6BAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CANF,CADF,CADF;AA0BD;;AAGD,SAASC,cAAT,GAA0B;AACxB,sBAAuC,+BAAvC;AAAA,MAAQC,SAAR,iBAAQA,SAAR;AAAA,MAAmBC,eAAnB,iBAAmBA,eAAnB;;AACA,SACE,6BAAC,kBAAD;AAAQ,IAAA,KAAK,EAAE,CAAf;AAAkB,IAAA,UAAU,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,6BAAC,kBAAD;AACE,IAAA,SAAS,EAAED,SAAS,KAAK,OAD3B;AAEE,IAAA,QAAQ,EAAEC,eAFZ;AAGE,kBACED,SAAS,KAAK,OAAd,GAAwB,qBAAxB,GAAgD,sBAJpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASE,6BAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aATF,CADF;AAaD",
    "sourcesContent": [
      "import React from 'react';\r\nimport {\r\n  Text,\r\n  Link,\r\n  HStack,\r\n  Center,\r\n  Heading,\r\n  Switch,\r\n  useColorMode,\r\n  NativeBaseProvider,\r\n  extendTheme,\r\n  VStack,\r\n  Code,\r\n} from 'native-base';\r\nimport NativeBaseIcon from '@src/components/NativeBaseIcon';\r\n\r\n// Define the config\r\nconst config = {\r\n  useSystemColorMode: false,\r\n  initialColorMode: 'dark',\r\n};\r\n\r\n// extend the theme\r\nexport const theme = extendTheme({ config });\r\n\r\nexport default function App() {\r\n  return (\r\n    <NativeBaseProvider>\r\n      <Center\r\n        _dark={{ bg: 'blueGray.900' }}\r\n        _light={{ bg: 'blueGray.50' }}\r\n        px={4}\r\n        flex={1}\r\n      >\r\n        <VStack space={5} alignItems=\"center\">\r\n          <NativeBaseIcon />\r\n          <Heading size=\"lg\">Welcome to NativeBase</Heading>\r\n          <HStack space={2} alignItems=\"center\">\r\n            <Text>Edit</Text>\r\n            <Code>App.tsx</Code>\r\n            <Text>and save to reload.</Text>\r\n          </HStack>\r\n          <Link href=\"https://docs.nativebase.io\" isExternal>\r\n            <Text color=\"primary.500\" underline fontSize=\"xl\">\r\n              Learn NativeBase\r\n            </Text>\r\n          </Link>\r\n          <ToggleDarkMode />\r\n        </VStack>\r\n      </Center>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\n// Color Switch Component\r\nfunction ToggleDarkMode() {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  return (\r\n    <HStack space={2} alignItems=\"center\">\r\n      <Text>Dark</Text>\r\n      <Switch\r\n        isChecked={colorMode === 'light'}\r\n        onToggle={toggleColorMode}\r\n        aria-label={\r\n          colorMode === 'light' ? 'switch to dark mode' : 'switch to light mode'\r\n        }\r\n      />\r\n      <Text>Light</Text>\r\n    </HStack>\r\n  );\r\n}\r\n"
    ]
  },
  "metadata": {},
  "sourceType": "script"
}
