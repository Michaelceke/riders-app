{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Home;\nexports.theme = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _nativeBase = require(\"native-base\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\a\\\\projects\\\\riders-app\\\\src\\\\screens\\\\Home.tsx\";\nvar config = {\n  useSystemColorMode: false,\n  initialColorMode: \"dark\"\n};\n\nvar DrawerScreensLayout = function DrawerScreensLayout() {\n  return _react.default.createElement(_nativeBase.Box, {\n    flex: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 10\n    }\n  }, \"hhhhh\");\n};\n\nvar theme = (0, _nativeBase.extendTheme)({\n  config: config\n});\nexports.theme = theme;\n\nfunction Home() {\n  return _react.default.createElement(_nativeBase.Box, {\n    mx: \"10px\",\n    flex: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(DrawerScreensLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/a/projects/riders-app/src/screens/Home.tsx"],"names":["config","useSystemColorMode","initialColorMode","DrawerScreensLayout","theme","Home"],"mappings":";;;;;;;;AAAA;;AACA;;;AA6BA,IAAMA,MAAM,GAAG;AACbC,EAAAA,kBAAkB,EAAE,KADP;AAEbC,EAAAA,gBAAgB,EAAE;AAFL,CAAf;;AAKA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChC,SAAO,6BAAC,eAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACD,CAFD;;AAKO,IAAMC,KAAK,GAAG,6BAAY;AAAEJ,EAAAA,MAAM,EAANA;AAAF,CAAZ,CAAd;;;AAEQ,SAASK,IAAT,GAAgB;AAC7B,SACE,6BAAC,eAAD;AAAK,IAAA,EAAE,EAAC,MAAR;AAAe,IAAA,IAAI,EAAE,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,6BAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD","sourcesContent":["import React from \"react\";\nimport {\n  Text,\n  Link,\n  HStack,\n  Center,\n  Heading,\n  Switch,\n  useColorMode,\n  NativeBaseProvider,\n  extendTheme,\n  VStack,\n  Code,\n  Box,\n} from \"native-base\";\nimport NativeBaseIcon from \"@src/components/NativeBaseIcon\";\n\n//test imports auth screens\nimport Login from \"./AuthScreens/Login\";\nimport SignUp from \"./AuthScreens/SignUp\";\nimport Verification from \"./AuthScreens/Verification\";\nimport OrderDetail from \"@src/_shared/libs/OrderDetail\";\nimport OrderStartsArrived from \"./Orders/OrderStartsArrived\";\nimport OrderDelivered from \"./Orders/OrderDelivered\";\nimport MapScreen from \"./MapScreens\";\nimport BatchCardX from \"@src/_shared/libs/BatchCardX\";\nimport OrderCard from \"@src/_shared/libs/OrderCard\";\nimport BatchCardXList from \"@src/_shared/libs/BatchCardXList\";\n\n// Define the config\nconst config = {\n  useSystemColorMode: false,\n  initialColorMode: \"dark\",\n};\n\nconst DrawerScreensLayout = () => {\n  return <Box flex={1}>hhhhh</Box>;\n};\n\n// extend the theme\nexport const theme = extendTheme({ config });\n\nexport default function Home() {\n  return (\n    <Box mx=\"10px\" flex={1}>\n      {/* <BatchCardXList /> */}\n      <DrawerScreensLayout />\n    </Box>\n  );\n}\n\n// Color Switch Component\n// function ToggleDarkMode() {\n//   const { colorMode, toggleColorMode } = useColorMode();\n//   return (\n//     <HStack space={2} alignItems=\"center\">\n//       <Text>Dark</Text>\n//       <Switch\n//         isChecked={colorMode === \"light\"}\n//         onToggle={toggleColorMode}\n//         aria-label={\n//           colorMode === \"light\" ? \"switch to dark mode\" : \"switch to light mode\"\n//         }\n//       />\n//       <Text>Light</Text>\n//     </HStack>\n//   );\n// }\n"]},"metadata":{},"sourceType":"script"}