{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = App;\nexports.theme = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _nativeBase = require(\"native-base\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\a\\\\projects\\\\riders-app\\\\src\\\\screens\\\\Home.tsx\";\nvar config = {\n  useSystemColorMode: false,\n  initialColorMode: \"dark\"\n};\nvar theme = (0, _nativeBase.extendTheme)({\n  config: config\n});\nexports.theme = theme;\n\nfunction App() {\n  return _react.default.createElement(_react.default.Fragment, null);\n}\n\nfunction ToggleDarkMode() {\n  var _useColorMode = (0, _nativeBase.useColorMode)(),\n      colorMode = _useColorMode.colorMode,\n      toggleColorMode = _useColorMode.toggleColorMode;\n\n  return _react.default.createElement(_nativeBase.HStack, {\n    space: 2,\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_nativeBase.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"Dark\"), _react.default.createElement(_nativeBase.Switch, {\n    isChecked: colorMode === \"light\",\n    onToggle: toggleColorMode,\n    \"aria-label\": colorMode === \"light\" ? \"switch to dark mode\" : \"switch to light mode\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_nativeBase.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"Light\"));\n}","map":{"version":3,"sources":["C:/Users/a/projects/riders-app/src/screens/Home.tsx"],"names":["config","useSystemColorMode","initialColorMode","theme","App","ToggleDarkMode","colorMode","toggleColorMode"],"mappings":";;;;;;;;AAAA;;AACA;;;AAwBA,IAAMA,MAAM,GAAG;AACbC,EAAAA,kBAAkB,EAAE,KADP;AAEbC,EAAAA,gBAAgB,EAAE;AAFL,CAAf;AAMO,IAAMC,KAAK,GAAG,6BAAY;AAAEH,EAAAA,MAAM,EAANA;AAAF,CAAZ,CAAd;;;AAEQ,SAASI,GAAT,GAAe;AAC5B,SACE,2DADF;AA+BD;;AAGD,SAASC,cAAT,GAA0B;AACxB,sBAAuC,+BAAvC;AAAA,MAAQC,SAAR,iBAAQA,SAAR;AAAA,MAAmBC,eAAnB,iBAAmBA,eAAnB;;AACA,SACE,6BAAC,kBAAD;AAAQ,IAAA,KAAK,EAAE,CAAf;AAAkB,IAAA,UAAU,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,6BAAC,kBAAD;AACE,IAAA,SAAS,EAAED,SAAS,KAAK,OAD3B;AAEE,IAAA,QAAQ,EAAEC,eAFZ;AAGE,kBACED,SAAS,KAAK,OAAd,GAAwB,qBAAxB,GAAgD,sBAJpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASE,6BAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aATF,CADF;AAaD","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Text,\r\n  Link,\r\n  HStack,\r\n  Center,\r\n  Heading,\r\n  Switch,\r\n  useColorMode,\r\n  NativeBaseProvider,\r\n  extendTheme,\r\n  VStack,\r\n  Code,\r\n  Box,\r\n} from \"native-base\";\r\nimport NativeBaseIcon from \"@src/components/NativeBaseIcon\";\r\n\r\n//test imports auth screens\r\nimport Login from \"./authScreens/Login\";\r\nimport SignUp from \"./authScreens/SignUp\";\r\nimport Verification from \"./authScreens/Verification\";\r\nimport OrderDetail from \"@src/_shared/libs/OrderDetail\";\r\nimport OrderStartsArrived from \"./Orders/OrderStartsArrived\"\r\nimport OrderDelivered from \"./Orders/OrderDelivered\"\r\n// Define the config\r\nconst config = {\r\n  useSystemColorMode: false,\r\n  initialColorMode: \"dark\",\r\n};\r\n\r\n// extend the theme\r\nexport const theme = extendTheme({ config });\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      {/* <Center\r\n        _dark={{ bg: 'blueGray.900' }}\r\n        _light={{ bg: 'blueGray.50' }}\r\n        px={4}\r\n        flex={1}\r\n      >\r\n        <VStack space={5} alignItems=\"center\">\r\n          <NativeBaseIcon />\r\n          <Heading size=\"lg\">Welcome to NativeBase</Heading>\r\n          <HStack space={2} alignItems=\"center\">\r\n            <Text>Edit</Text>\r\n            <Code>App.tsx</Code>\r\n            <Text>and save to reload.</Text>\r\n          </HStack>\r\n          <Link href=\"https://docs.nativebase.io\" isExternal>\r\n            <Text color=\"primary.500\" underline fontSize=\"xl\">\r\n              Learn NativeBase\r\n            </Text>\r\n          </Link>\r\n          <ToggleDarkMode />\r\n        </VStack>\r\n      </Center> */}\r\n      {/* <Login /> */}\r\n      {/* <Verification /> */}\r\n      {/* <OrderDetail item={{}}/> */}\r\n      {/* <OrderStartsArrived item={{}}/> */}\r\n      {/* <OrderDelivered item={{}}/> */}\r\n    </>\r\n  );\r\n}\r\n\r\n// Color Switch Component\r\nfunction ToggleDarkMode() {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  return (\r\n    <HStack space={2} alignItems=\"center\">\r\n      <Text>Dark</Text>\r\n      <Switch\r\n        isChecked={colorMode === \"light\"}\r\n        onToggle={toggleColorMode}\r\n        aria-label={\r\n          colorMode === \"light\" ? \"switch to dark mode\" : \"switch to light mode\"\r\n        }\r\n      />\r\n      <Text>Light</Text>\r\n    </HStack>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"script"}