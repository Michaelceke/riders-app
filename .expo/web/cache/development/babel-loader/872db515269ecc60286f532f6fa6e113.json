{
  "ast": null,
  "code": "var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fetchQuoteRequest = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _ = require(\"./\");\n\nvar fetchQuoteRequest = function fetchQuoteRequest() {\n  return _regenerator.default.async(function fetchQuoteRequest$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regenerator.default.awrap(_.quotesApi.get(\"/qod\"));\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.fetchQuoteRequest = fetchQuoteRequest;",
  "map": {
    "version": 3,
    "sources": ["C:/Users/a/projects/riders-app/src/services/quote.ts"],
    "names": ["fetchQuoteRequest", "quotesApi", "get"],
    "mappings": ";;;;;;;;;AAAA;;AAUO,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAClBC,YAAUC,GAAV,CAAiC,MAAjC,CADkB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B",
    "sourcesContent": [
      "import { quotesApi } from \"@src/services\";\nimport { QuoteState } from \"@src/stores/quote/types\";\n\nexport interface QuoteResponse {\n  success: string;\n  contents: {\n    quotes: QuoteState[];\n  };\n}\n\nexport const fetchQuoteRequest = async () => {\n  return await quotesApi.get<QuoteResponse, {}>(\"/qod\");\n};\n"
    ]
  },
  "metadata": {},
  "sourceType": "script"
}
