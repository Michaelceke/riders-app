{
  "ast": null,
  "code": "var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _types = require(\"./types\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar initialState = {\n  author: \"Kanye West\",\n  quote: \"I'd like to meet with Tim Cook.I got some ideas\",\n  title: \"A quote from Kanye\"\n};\n\nvar quoteReducer = function quoteReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case _types.QuoteActionTypes.FETCH_QUOTES_SUCCESS:\n      {\n        var _action$payload = action.payload,\n            author = _action$payload.author,\n            quote = _action$payload.quote,\n            title = _action$payload.title;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          author: author,\n          quote: quote,\n          title: title\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nvar _default = quoteReducer;\nexports.default = _default;",
  "map": {
    "version": 3,
    "sources": ["C:/Users/a/projects/riders-app/src/stores/quote/reducer.ts"],
    "names": [
      "initialState",
      "author",
      "quote",
      "title",
      "quoteReducer",
      "state",
      "action",
      "type",
      "QuoteActionTypes",
      "FETCH_QUOTES_SUCCESS",
      "payload"
    ],
    "mappings": ";;;;;;;;;AACA;;;;;;AAEA,IAAMA,YAAwB,GAAG;AAC/BC,EAAAA,MAAM,EAAE,YADuB;AAE/BC,EAAAA,KAAK,EAAE,iDAFwB;AAG/BC,EAAAA,KAAK,EAAE;AAHwB,CAAjC;;AAMA,IAAMC,YAA+C,GAAG,SAAlDA,YAAkD,GAGnD;AAAA,MAFHC,KAEG,uEAFKL,YAEL;AAAA,MADHM,MACG;;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKC,wBAAiBC,oBAAtB;AAA4C;AAC1C,8BAAiCH,MAAM,CAACI,OAAxC;AAAA,YAAQT,MAAR,mBAAQA,MAAR;AAAA,YAAgBC,KAAhB,mBAAgBA,KAAhB;AAAA,YAAuBC,KAAvB,mBAAuBA,KAAvB;AACA,+CAAYE,KAAZ;AAAmBJ,UAAAA,MAAM,EAANA,MAAnB;AAA2BC,UAAAA,KAAK,EAALA,KAA3B;AAAkCC,UAAAA,KAAK,EAALA;AAAlC;AACD;;AACD;AAAS;AACP,eAAOE,KAAP;AACD;AAPH;AASD,CAbD;;eAeeD,Y",
    "sourcesContent": [
      "import { Reducer } from \"redux\";\nimport { QuoteState, QuoteActions, QuoteActionTypes } from \"./types\";\n\nconst initialState: QuoteState = {\n  author: \"Kanye West\",\n  quote: \"I'd like to meet with Tim Cook.I got some ideas\",\n  title: \"A quote from Kanye\",\n};\n\nconst quoteReducer: Reducer<QuoteState, QuoteActions> = (\n  state = initialState,\n  action\n) => {\n  switch (action.type) {\n    case QuoteActionTypes.FETCH_QUOTES_SUCCESS: {\n      const { author, quote, title } = action.payload;\n      return { ...state, author, quote, title };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default quoteReducer;\n"
    ]
  },
  "metadata": {},
  "sourceType": "script"
}
