{
  "ast": null,
  "code": "var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Home;\nexports.theme = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _nativeBase = require(\"native-base\");\n\nvar _BatchCardXList = _interopRequireDefault(require(\"../_shared/libs/BatchCardXList\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\a\\\\projects\\\\riders-app\\\\src\\\\screens\\\\Home.tsx\";\nvar config = {\n  useSystemColorMode: false,\n  initialColorMode: \"dark\"\n};\nvar theme = (0, _nativeBase.extendTheme)({\n  config: config\n});\nexports.theme = theme;\n\nfunction Home(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = _react.default.useState(0),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      count = _React$useState2[0],\n      setCount = _React$useState2[1];\n\n  _react.default.useLayoutEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return _react.default.createElement(_nativeBase.Button, {\n          onPress: function onPress() {\n            return setCount(function (c) {\n              return c + 1;\n            });\n          },\n          title: \"Update count\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 9\n          }\n        });\n      }\n    });\n  }, [navigation]);\n\n  return _react.default.createElement(_nativeBase.Box, {\n    mx: \"10px\",\n    flex: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_BatchCardXList.default, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n}",
  "map": {
    "version": 3,
    "sources": ["C:/Users/a/projects/riders-app/src/screens/Home.tsx"],
    "names": [
      "config",
      "useSystemColorMode",
      "initialColorMode",
      "theme",
      "Home",
      "navigation",
      "React",
      "useState",
      "count",
      "setCount",
      "useLayoutEffect",
      "setOptions",
      "headerRight",
      "c"
    ],
    "mappings": ";;;;;;;;;;AAAA;;AACA;;AA2BA;;;AAGA,IAAMA,MAAM,GAAG;AACbC,EAAAA,kBAAkB,EAAE,KADP;AAEbC,EAAAA,gBAAgB,EAAE;AAFL,CAAf;AAcO,IAAMC,KAAK,GAAG,6BAAY;AAAEH,EAAAA,MAAM,EAANA;AAAF,CAAZ,CAAd;;;AAEQ,SAASI,IAAT,OAA4B;AAAA,MAAbC,UAAa,QAAbA,UAAa;;AACzC,wBAA0BC,eAAMC,QAAN,CAAe,CAAf,CAA1B;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AAEAH,iBAAMI,eAAN,CAAsB,YAAM;AAC1BL,IAAAA,UAAU,CAACM,UAAX,CAAsB;AACpBC,MAAAA,WAAW,EAAE;AAAA,eACX,6BAAC,kBAAD;AAAQ,UAAA,OAAO,EAAE;AAAA,mBAAMH,QAAQ,CAAC,UAAAI,CAAC;AAAA,qBAAIA,CAAC,GAAG,CAAR;AAAA,aAAF,CAAd;AAAA,WAAjB;AAA6C,UAAA,KAAK,EAAC,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADW;AAAA;AADO,KAAtB;AAKD,GAND,EAMG,CAACR,UAAD,CANH;;AAOA,SAEE,6BAAC,eAAD;AAAK,IAAA,EAAE,EAAC,MAAR;AAAe,IAAA,IAAI,EAAE,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF;AAOD",
    "sourcesContent": [
      "import React from \"react\";\nimport {\n  Text,\n  Link,\n  HStack,\n  Center,\n  Heading,\n  Switch,\n  useColorMode,\n  NativeBaseProvider,\n  extendTheme,\n  VStack,\n  Code,\n  Box,\n  Button\n} from \"native-base\";\nimport NativeBaseIcon from \"@src/components/NativeBaseIcon\";\n\n//test imports auth screens\nimport Login from \"./AuthScreens/Login\";\nimport SignUp from \"./AuthScreens/SignUp\";\nimport Verification from \"./AuthScreens/Verification\";\nimport OrderDetail from \"@src/_shared/libs/OrderDetail\";\nimport OrderStartsArrived from \"./Orders/OrderStartsArrived\";\nimport OrderDelivered from \"./Orders/OrderDelivered\";\nimport MapScreen from \"./MapScreens\";\nimport BatchCardX from \"@src/_shared/libs/BatchCardX\";\nimport OrderCard from \"@src/_shared/libs/OrderCard\";\nimport BatchCardXList from \"@src/_shared/libs/BatchCardXList\";\n\n// Define the config\nconst config = {\n  useSystemColorMode: false,\n  initialColorMode: \"dark\",\n};\n\n// const DrawerScreensLayout = () => {\n//   return( <\n//     Box flex={1}>\n//     hhhhh\n//     </Box>\n//     );\n// };\n\n// extend the theme\nexport const theme = extendTheme({ config });\n\nexport default function Home({navigation}) {\n  const [count, setCount] = React.useState(0);\n\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <Button onPress={() => setCount(c => c + 1)} title=\"Update count\" />\n      ),\n    });\n  }, [navigation]);\n  return (\n\n    <Box mx=\"10px\" flex={1}>\n      <BatchCardXList /> \n     \n    </Box>\n  );\n}\n\n// Color Switch Component\n// function ToggleDarkMode() {\n//   const { colorMode, toggleColorMode } = useColorMode();\n//   return (\n//     <HStack space={2} alignItems=\"center\">\n//       <Text>Dark</Text>\n//       <Switch\n//         isChecked={colorMode === \"light\"}\n//         onToggle={toggleColorMode}\n//         aria-label={\n//           colorMode === \"light\" ? \"switch to dark mode\" : \"switch to light mode\"\n//         }\n//       />\n//       <Text>Light</Text>\n//     </HStack>\n//   );\n// }\n"
    ]
  },
  "metadata": {},
  "sourceType": "script"
}
