{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useSelector = exports.store = exports.default = void 0;\n\nvar _redux = require(\"redux\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _reduxSaga = _interopRequireDefault(require(\"redux-saga\"));\n\nvar _appNotification = require(\"./appNotification\");\n\nvar _quote = require(\"./quote\");\n\nvar _saga = _interopRequireDefault(require(\"./saga\"));\n\nvar sagaMiddleware = (0, _reduxSaga.default)();\nvar rootReducer = (0, _redux.combineReducers)({\n  appNotification: _appNotification.appNotification,\n  quote: _quote.quote\n});\n\nvar configureStore = function configureStore() {\n  var store = (0, _redux.createStore)(rootReducer, (0, _redux.compose)((0, _redux.applyMiddleware)(sagaMiddleware)));\n  sagaMiddleware.run(_saga.default);\n  return store;\n};\n\nvar store = configureStore();\nexports.store = store;\nvar useSelector = _reactRedux.useSelector;\nexports.useSelector = useSelector;\nvar _default = rootReducer;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/a/projects/riders-app/src/stores/index.ts"],"names":["sagaMiddleware","rootReducer","appNotification","quote","configureStore","store","run","saga","useSelector","useReduxSelector"],"mappings":";;;;;;;AAAA;;AACA;;AAIA;;AACA;;AACA;;AACA;;AAEA,IAAMA,cAAc,GAAG,yBAAvB;AAEA,IAAMC,WAAW,GAAG,4BAAgB;AAClCC,EAAAA,eAAe,EAAfA,gCADkC;AAElCC,EAAAA,KAAK,EAALA;AAFkC,CAAhB,CAApB;;AAKA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,MAAMC,KAAK,GAAG,wBACZJ,WADY,EAEZ,oBAAQ,4BAAgBD,cAAhB,CAAR,CAFY,CAAd;AAKAA,EAAAA,cAAc,CAACM,GAAf,CAAmBC,aAAnB;AACA,SAAOF,KAAP;AACD,CARD;;AAUO,IAAMA,KAAK,GAAGD,cAAc,EAA5B;;AAEA,IAAMI,WAA4C,GAAGC,uBAArD;;eACQR,W","sourcesContent":["import { combineReducers, createStore, applyMiddleware, compose } from \"redux\";\nimport {\n  useSelector as useReduxSelector,\n  TypedUseSelectorHook,\n} from \"react-redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { appNotification } from \"@src/stores/appNotification\";\nimport { quote } from \"@src/stores/quote\";\nimport saga from \"@src/stores/saga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst rootReducer = combineReducers({\n  appNotification,\n  quote,\n});\n\nconst configureStore = () => {\n  const store = createStore(\n    rootReducer,\n    compose(applyMiddleware(sagaMiddleware))\n  );\n\n  sagaMiddleware.run(saga);\n  return store;\n};\n\nexport const store = configureStore();\nexport type RootState = ReturnType<typeof rootReducer>;\nexport const useSelector: TypedUseSelectorHook<RootState> = useReduxSelector;\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"script"}